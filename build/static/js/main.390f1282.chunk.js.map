{"version":3,"sources":["Chatroom.js","UsernameForm.js","App.js","index.js"],"names":["Chatroom","messages","handleSubmit","handleInput","input","thisusername","className","id","map","message","username","class","Math","random","onSubmit","autoComplete","value","onChange","type","UsernameForm","handleUsername","handleUsernameForm","placeholder","valuevalue","style","fontFamily","color","margin","borderRadius","socket","io","App","useState","setInput","setUsername","isusername","setIsusername","setMessage","on","users","console","log","msg","window","scrollTo","document","body","scrollHeight","e","target","preventDefault","emit","axios","get","then","res","data","auth","ReactDOM","render","StrictMode","getElementById"],"mappings":"+LAsBeA,EApBE,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,SAAUC,EAAqD,EAArDA,aAAcC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aAC5D,OACI,sBAAKC,UAAU,WAAf,UACI,oBAAIC,GAAG,WAAWD,UAAU,aAA5B,SACKL,EAASO,KAAI,SAACC,GACX,OAAIJ,IAAiBI,EAAQC,SACjB,qBAAIC,MAAM,uCAAV,UAAsEF,EAAQC,SAA9E,MAA2FD,EAAQL,MAAnG,aAAsDQ,KAAKC,UAE3D,+BAAyBJ,EAAQC,SAAjC,MAA8CD,EAAQL,MAAtD,MAASQ,KAAKC,eAIlC,uBAAMN,GAAG,OAAOO,SAAUZ,EAAca,aAAa,MAArD,UACI,uBAAOR,GAAG,QAAQS,MAAOZ,EAAOa,SAAUd,IAC1C,wBAAQe,KAAK,SAASZ,UAAU,gBAAhC,yBCEDa,EAfM,SAAC,GAAsD,IAApDT,EAAmD,EAAnDA,SAAUU,EAAyC,EAAzCA,eAAgBC,EAAyB,EAAzBA,mBAC9C,OACI,qBAAKf,UAAU,iBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,mBAAGA,UAAU,YAAb,gEACA,mBAAGA,UAAU,aAAb,wCACA,uBAAMQ,SAAUO,EAAhB,UACI,uBAAOf,UAAU,aAAagB,YAAY,uBAAuBC,WAAYb,EAAUO,SAAUG,EAAgBI,MAAO,CAAEC,WAAY,QAASC,MAAO,SAAWR,KAAK,SACtK,wBAAQA,KAAK,SAASZ,UAAU,+BAA+BkB,MAAO,CAAEG,OAAQ,OAAQC,aAAc,QAAtG,6B,iBCHdC,EAASC,aAAG,yBA0DHC,MAxDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAO5B,EAAP,KAAc6B,EAAd,KACA,EAAgCD,mBAAS,IAAzC,mBAAOtB,EAAP,KAAiBwB,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOvB,EAAP,KAAgB4B,EAAhB,KAyCA,OAjBAR,EAAOS,GAAG,iBAAiB,SAACC,GAC1BC,QAAQC,IAAIF,MAGdV,EAAOS,GAAG,gBAAgB,SAAUI,GAClCL,EAAW,GAAD,mBAAK5B,GAAL,CAAciC,KACxBC,OAAOC,SAAS,EAAGC,SAASC,KAAKC,iBAGnClB,EAAOS,GAAG,eAAe,SAAC5B,GACxB8B,QAAQC,IAAI/B,EAAU,iBAGxBmB,EAAOS,GAAG,aAAa,WACrBE,QAAQC,IAAI,wBAIZ,qBAAKnC,UAAU,MAAf,UACkB,IAAf6B,EACC,cAAC,EAAD,CAAczB,SAAUA,EAAUU,eAAgB,SAAC4B,GAAD,OAAOd,EAAYc,EAAEC,OAAOjC,QAAQK,mBA9BjE,SAAC2B,GAC1BA,EAAEE,iBACFd,GAAc,GACdI,QAAQC,IAAI/B,GACZwB,EAAYxB,GACZmB,EAAOsB,KAAK,WAAYzC,GAhBxB0C,IAAMC,IAAI,sCAAsCC,MAAK,SAAAC,GACnDf,QAAQC,IAAIc,GACZlB,EAAWkB,EAAIC,SAgBjB3B,EAAO4B,KAAO,CAAE/C,eAyBZ,cAAC,EAAD,CAAUT,SAAUQ,EAASP,aAtCd,SAAC8C,GACpBA,EAAEE,iBACFrB,EAAOsB,KAAK,UAAW,CAAEzC,WAAUN,UACnC6B,EAAS,KAmCoD9B,YAAa,SAAC6C,GAAQf,EAASe,EAAEC,OAAOjC,QAAUZ,MAAOA,EAAOC,aAAcK,O,OCtD/IgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFf,SAASgB,eAAe,U","file":"static/js/main.390f1282.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Chatroom = ({ messages, handleSubmit, handleInput, input, thisusername }) => {\r\n    return (\r\n        <div className=\"chatroom\">\r\n            <ul id=\"messages\" className=\"list-group\">\r\n                {messages.map((message) => {\r\n                    if (thisusername === message.username) {\r\n                        return (<li class=\"list-group-item list-group-item-info\" key={Math.random()}>{message.username} : {message.input}  (You) </li>)\r\n                    } else {\r\n                        return (<li key={Math.random()}>{message.username} : {message.input} </li>)\r\n                    }\r\n                })}\r\n            </ul>\r\n            <form id=\"form\" onSubmit={handleSubmit} autoComplete=\"off\" >\r\n                <input id=\"input\" value={input} onChange={handleInput} />\r\n                <button type=\"submit\" className=\"btn btn-light\">Send</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chatroom\r\n","\r\n\r\n\r\nconst UsernameForm = ({ username, handleUsername, handleUsernameForm }) => {\r\n    return (\r\n        <div className=\"bg text-center\">\r\n            <div className=\"centered\">\r\n                <p className=\"firstLine\"> B &nbsp; R &nbsp; E &nbsp; A &nbsp; T &nbsp; H &nbsp; E &nbsp; </p>\r\n                <p className=\"secondLine\">The Simplest Chat App Ever</p>\r\n                <form onSubmit={handleUsernameForm}>\r\n                    <input className=\"InputStyle\" placeholder=\"Enter your username \" valuevalue={username} onChange={handleUsername} style={{ fontFamily: 'Arial', color: 'white' }} type=\"text\" />\r\n                    <button type=\"submit\" className=\"btn btn-outline-light btn-lg\" style={{ margin: \"20px\", borderRadius: '25px' }} >Submit</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsernameForm\r\n","import { useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport './App.css';\nimport Chatroom from \"./Chatroom\";\nimport UsernameForm from './UsernameForm'\nimport axios from 'axios'\n\n\nconst socket = io(\"http://localhost:8080\");\n\nfunction App() {\n  const [input, setInput] = useState('')\n  const [username, setUsername] = useState('')\n  const [isusername, setIsusername] = useState(false)\n  const [message, setMessage] = useState([])\n\n  const getHistory = () => {\n    axios.get(\"http://localhost:8080/api/messages\").then(res => {\n      console.log(res)\n      setMessage(res.data)\n    })\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    socket.emit('message', { username, input });\n    setInput('')\n  };\n\n  const handleUsernameForm = (e) => {\n    e.preventDefault();\n    setIsusername(true)\n    console.log(username)\n    setUsername(username)\n    socket.emit('username', username);\n    getHistory()\n    socket.auth = { username }\n  }\n\n  socket.on('current users', (users) => {\n    console.log(users)\n  })\n\n  socket.on('chat message', function (msg) {\n    setMessage([...message, msg])\n    window.scrollTo(0, document.body.scrollHeight);\n  });\n\n  socket.on('user joined', (username) => {\n    console.log(username, 'has joined')\n  })\n\n  socket.on('user left', () => {\n    console.log('user disconnected')\n  })\n\n  return (\n    <div className=\"App\">\n      {isusername === false ?\n        <UsernameForm username={username} handleUsername={(e) => setUsername(e.target.value)} handleUsernameForm={handleUsernameForm} />\n        :\n        <Chatroom messages={message} handleSubmit={handleSubmit} handleInput={(e) => { setInput(e.target.value) }} input={input} thisusername={username} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}